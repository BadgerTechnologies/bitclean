
// This file has been generated by the GUI designer. Do not modify.
namespace bitclean
{
	public partial class Diagnostics
	{
		private global::Gtk.UIManager UIManager;

		private global::Gtk.Action FileAction;

		private global::Gtk.Action LoadDataAction;

		private global::Gtk.Action FileAction1;

		private global::Gtk.Action LoadDataAction1;

		private global::Gtk.Action ChartsAction;

		private global::Gtk.Action ConfigureAction;

		private global::Gtk.Action GenerateChartAction;

		private global::Gtk.Action LearningAction;

		private global::Gtk.Action RunSifterAction;

		private global::Gtk.VBox vbox3;

		private global::Gtk.MenuBar menubar2;

		private global::Gtk.HBox hbox1;

		private global::Gtk.ScrolledWindow GtkScrolledWindow;

		private global::Gtk.TreeView datatree;

		private global::Gtk.VBox vbox1;

		private global::Gtk.Label AllStatsLabel;

		private global::Gtk.ScrolledWindow GtkScrolledWindow1;

		private global::Gtk.TreeView alldatatree;

		private global::Gtk.Label structureStatsLabel;

		private global::Gtk.ScrolledWindow GtkScrolledWindow2;

		private global::Gtk.TreeView structuredatatree;

		private global::Gtk.Label dustStatsLabel;

		private global::Gtk.ScrolledWindow GtkScrolledWindow3;

		private global::Gtk.TreeView dustdatatree;

		protected virtual void Build()
		{
			global::Stetic.Gui.Initialize(this);
			// Widget bitclean.Diagnostics
			this.UIManager = new global::Gtk.UIManager();
			global::Gtk.ActionGroup w1 = new global::Gtk.ActionGroup("Default");
			this.FileAction = new global::Gtk.Action("FileAction", global::Mono.Unix.Catalog.GetString("File"), null, null);
			this.FileAction.ShortLabel = global::Mono.Unix.Catalog.GetString("File");
			w1.Add(this.FileAction, null);
			this.LoadDataAction = new global::Gtk.Action("LoadDataAction", global::Mono.Unix.Catalog.GetString("Load Data"), null, null);
			this.LoadDataAction.ShortLabel = global::Mono.Unix.Catalog.GetString("Load Data");
			w1.Add(this.LoadDataAction, null);
			this.FileAction1 = new global::Gtk.Action("FileAction1", global::Mono.Unix.Catalog.GetString("File"), null, null);
			this.FileAction1.ShortLabel = global::Mono.Unix.Catalog.GetString("File");
			w1.Add(this.FileAction1, null);
			this.LoadDataAction1 = new global::Gtk.Action("LoadDataAction1", global::Mono.Unix.Catalog.GetString("Load Data"), null, null);
			this.LoadDataAction1.ShortLabel = global::Mono.Unix.Catalog.GetString("Load XML");
			w1.Add(this.LoadDataAction1, null);
			this.ChartsAction = new global::Gtk.Action("ChartsAction", global::Mono.Unix.Catalog.GetString("Charts"), null, null);
			this.ChartsAction.ShortLabel = global::Mono.Unix.Catalog.GetString("Charts");
			w1.Add(this.ChartsAction, null);
			this.ConfigureAction = new global::Gtk.Action("ConfigureAction", global::Mono.Unix.Catalog.GetString("Configure..."), null, null);
			this.ConfigureAction.ShortLabel = global::Mono.Unix.Catalog.GetString("Configure...");
			w1.Add(this.ConfigureAction, null);
			this.GenerateChartAction = new global::Gtk.Action("GenerateChartAction", global::Mono.Unix.Catalog.GetString("Generate Chart"), null, null);
			this.GenerateChartAction.ShortLabel = global::Mono.Unix.Catalog.GetString("Generate Chart");
			w1.Add(this.GenerateChartAction, null);
			this.LearningAction = new global::Gtk.Action("LearningAction", global::Mono.Unix.Catalog.GetString("Learning"), null, null);
			this.LearningAction.ShortLabel = global::Mono.Unix.Catalog.GetString("Learning");
			w1.Add(this.LearningAction, null);
			this.RunSifterAction = new global::Gtk.Action("RunSifterAction", global::Mono.Unix.Catalog.GetString("Run Sifter"), null, null);
			this.RunSifterAction.ShortLabel = global::Mono.Unix.Catalog.GetString("Run Sifter");
			w1.Add(this.RunSifterAction, null);
			this.UIManager.InsertActionGroup(w1, 0);
			this.AddAccelGroup(this.UIManager.AccelGroup);
			this.Name = "bitclean.Diagnostics";
			this.Title = global::Mono.Unix.Catalog.GetString("Diagnostics");
			this.WindowPosition = ((global::Gtk.WindowPosition)(4));
			// Container child bitclean.Diagnostics.Gtk.Container+ContainerChild
			this.vbox3 = new global::Gtk.VBox();
			this.vbox3.Name = "vbox3";
			this.vbox3.Spacing = 6;
			// Container child vbox3.Gtk.Box+BoxChild
			this.UIManager.AddUiFromString(@"<ui><menubar name='menubar2'><menu name='FileAction1' action='FileAction1'><menuitem name='LoadDataAction1' action='LoadDataAction1'/></menu><menu name='ChartsAction' action='ChartsAction'><menuitem name='ConfigureAction' action='ConfigureAction'/><menuitem name='GenerateChartAction' action='GenerateChartAction'/></menu><menu name='LearningAction' action='LearningAction'><menuitem name='RunSifterAction' action='RunSifterAction'/></menu></menubar></ui>");
			this.menubar2 = ((global::Gtk.MenuBar)(this.UIManager.GetWidget("/menubar2")));
			this.menubar2.Name = "menubar2";
			this.vbox3.Add(this.menubar2);
			global::Gtk.Box.BoxChild w2 = ((global::Gtk.Box.BoxChild)(this.vbox3[this.menubar2]));
			w2.Position = 0;
			w2.Expand = false;
			w2.Fill = false;
			// Container child vbox3.Gtk.Box+BoxChild
			this.hbox1 = new global::Gtk.HBox();
			this.hbox1.Name = "hbox1";
			this.hbox1.Spacing = 6;
			// Container child hbox1.Gtk.Box+BoxChild
			this.GtkScrolledWindow = new global::Gtk.ScrolledWindow();
			this.GtkScrolledWindow.Name = "GtkScrolledWindow";
			this.GtkScrolledWindow.ShadowType = ((global::Gtk.ShadowType)(1));
			// Container child GtkScrolledWindow.Gtk.Container+ContainerChild
			this.datatree = new global::Gtk.TreeView();
			this.datatree.CanFocus = true;
			this.datatree.Name = "datatree";
			this.datatree.Reorderable = true;
			this.GtkScrolledWindow.Add(this.datatree);
			this.hbox1.Add(this.GtkScrolledWindow);
			global::Gtk.Box.BoxChild w4 = ((global::Gtk.Box.BoxChild)(this.hbox1[this.GtkScrolledWindow]));
			w4.Position = 0;
			// Container child hbox1.Gtk.Box+BoxChild
			this.vbox1 = new global::Gtk.VBox();
			this.vbox1.Name = "vbox1";
			this.vbox1.Spacing = 6;
			// Container child vbox1.Gtk.Box+BoxChild
			this.AllStatsLabel = new global::Gtk.Label();
			this.AllStatsLabel.Name = "AllStatsLabel";
			this.AllStatsLabel.Xpad = 142;
			this.AllStatsLabel.LabelProp = global::Mono.Unix.Catalog.GetString("All Object Statistics");
			this.AllStatsLabel.Justify = ((global::Gtk.Justification)(1));
			this.vbox1.Add(this.AllStatsLabel);
			global::Gtk.Box.BoxChild w5 = ((global::Gtk.Box.BoxChild)(this.vbox1[this.AllStatsLabel]));
			w5.Position = 0;
			w5.Expand = false;
			w5.Fill = false;
			// Container child vbox1.Gtk.Box+BoxChild
			this.GtkScrolledWindow1 = new global::Gtk.ScrolledWindow();
			this.GtkScrolledWindow1.Name = "GtkScrolledWindow1";
			this.GtkScrolledWindow1.ShadowType = ((global::Gtk.ShadowType)(1));
			// Container child GtkScrolledWindow1.Gtk.Container+ContainerChild
			this.alldatatree = new global::Gtk.TreeView();
			this.alldatatree.CanFocus = true;
			this.alldatatree.Name = "alldatatree";
			this.GtkScrolledWindow1.Add(this.alldatatree);
			this.vbox1.Add(this.GtkScrolledWindow1);
			global::Gtk.Box.BoxChild w7 = ((global::Gtk.Box.BoxChild)(this.vbox1[this.GtkScrolledWindow1]));
			w7.Position = 1;
			// Container child vbox1.Gtk.Box+BoxChild
			this.structureStatsLabel = new global::Gtk.Label();
			this.structureStatsLabel.Name = "structureStatsLabel";
			this.structureStatsLabel.LabelProp = global::Mono.Unix.Catalog.GetString("Structure Only Statistics");
			this.vbox1.Add(this.structureStatsLabel);
			global::Gtk.Box.BoxChild w8 = ((global::Gtk.Box.BoxChild)(this.vbox1[this.structureStatsLabel]));
			w8.Position = 2;
			w8.Expand = false;
			w8.Fill = false;
			// Container child vbox1.Gtk.Box+BoxChild
			this.GtkScrolledWindow2 = new global::Gtk.ScrolledWindow();
			this.GtkScrolledWindow2.Name = "GtkScrolledWindow2";
			this.GtkScrolledWindow2.ShadowType = ((global::Gtk.ShadowType)(1));
			// Container child GtkScrolledWindow2.Gtk.Container+ContainerChild
			this.structuredatatree = new global::Gtk.TreeView();
			this.structuredatatree.CanFocus = true;
			this.structuredatatree.Name = "structuredatatree";
			this.GtkScrolledWindow2.Add(this.structuredatatree);
			this.vbox1.Add(this.GtkScrolledWindow2);
			global::Gtk.Box.BoxChild w10 = ((global::Gtk.Box.BoxChild)(this.vbox1[this.GtkScrolledWindow2]));
			w10.Position = 3;
			// Container child vbox1.Gtk.Box+BoxChild
			this.dustStatsLabel = new global::Gtk.Label();
			this.dustStatsLabel.Name = "dustStatsLabel";
			this.dustStatsLabel.LabelProp = global::Mono.Unix.Catalog.GetString("Dust Only Statistics");
			this.vbox1.Add(this.dustStatsLabel);
			global::Gtk.Box.BoxChild w11 = ((global::Gtk.Box.BoxChild)(this.vbox1[this.dustStatsLabel]));
			w11.Position = 4;
			w11.Expand = false;
			w11.Fill = false;
			// Container child vbox1.Gtk.Box+BoxChild
			this.GtkScrolledWindow3 = new global::Gtk.ScrolledWindow();
			this.GtkScrolledWindow3.Name = "GtkScrolledWindow3";
			this.GtkScrolledWindow3.ShadowType = ((global::Gtk.ShadowType)(1));
			// Container child GtkScrolledWindow3.Gtk.Container+ContainerChild
			this.dustdatatree = new global::Gtk.TreeView();
			this.dustdatatree.CanFocus = true;
			this.dustdatatree.Name = "dustdatatree";
			this.GtkScrolledWindow3.Add(this.dustdatatree);
			this.vbox1.Add(this.GtkScrolledWindow3);
			global::Gtk.Box.BoxChild w13 = ((global::Gtk.Box.BoxChild)(this.vbox1[this.GtkScrolledWindow3]));
			w13.Position = 5;
			this.hbox1.Add(this.vbox1);
			global::Gtk.Box.BoxChild w14 = ((global::Gtk.Box.BoxChild)(this.hbox1[this.vbox1]));
			w14.Position = 1;
			w14.Expand = false;
			w14.Fill = false;
			this.vbox3.Add(this.hbox1);
			global::Gtk.Box.BoxChild w15 = ((global::Gtk.Box.BoxChild)(this.vbox3[this.hbox1]));
			w15.Position = 1;
			this.Add(this.vbox3);
			if ((this.Child != null))
			{
				this.Child.ShowAll();
			}
			this.DefaultWidth = 1032;
			this.DefaultHeight = 792;
			this.Show();
			this.LoadDataAction.Activated += new global::System.EventHandler(this.LoadXMLData);
			this.LoadDataAction1.Activated += new global::System.EventHandler(this.LoadXMLData);
			this.ConfigureAction.Activated += new global::System.EventHandler(this.OpenChartConfiguration);
			this.GenerateChartAction.Activated += new global::System.EventHandler(this.GenerateChart);
			this.RunSifterAction.Activated += new global::System.EventHandler(this.RunSifter);
		}
	}
}
